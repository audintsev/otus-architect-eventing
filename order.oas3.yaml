openapi: 3.0.0

info:
  version: '0.1.0'
  title: Orders Service

paths:
  # Orders

  /api/v1/orders:
    get:
      summary: List all orders
      operationId: listOrders
      responses:
        '200':
          description: An array of orders
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Orders'

    post:
      summary: Create an order
      operationId: createOrder
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateOrderRequest'
      responses:
        '200':
          description: Created order
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'

  /api/v1/orders/{orderId}:
    get:
      summary: Get an order
      operationId: getOrder
      parameters:
        - $ref: '#/components/parameters/orderId'

      responses:
        '200':
          description: Requested Order
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'

  /api/v1/orders/{orderId}/checkout:
    post:
      summary: Checkout an order
      operationId: checkoutOrder
      parameters:
        - $ref: '#/components/parameters/orderId'
      responses:
        '200':
          description: Order has been checked out
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
              example:
                id: 45
                userId: 67
                items:
                  - itemId: 123
                    quantity: 2
                  - itemId: 321
                    quantity: 3
                status: checked_out

components:
  parameters:
    orderId:
      name: orderId
      in: path
      required: true
      description: The ID of the order
      schema:
        $ref: '#/components/schemas/OrderId'

  schemas:
    OrderItemId:
      type: integer
      format: int64
      example: 123
    OrderItem:
      required:
        - itemId
        - quantity
      properties:
        itemId:
          $ref: '#/components/schemas/OrderItemId'
        quantity:
          type: integer
          format: int32
      example:
        itemId: 123
        quantity: 2

    OrderId:
      type: integer
      format: int64
      example: 45
    UserId:
      type: integer
      format: int64
      example: 67
    OrderStatus:
      type: string
      enum:
        - created
        - checked_out
        - payment_succeeded
        - payment_failed
        - fulfilled
      default: created
    Order:
      required:
        - id
        - userId
        - items
        - status
      properties:
        id:
          $ref: '#/components/schemas/OrderId'
        userId:
          $ref: '#/components/schemas/UserId'
        items:
          type: array
          items:
            $ref: '#/components/schemas/OrderItem'
        status:
          $ref: '#/components/schemas/OrderStatus'
      example:
        id: 45
        userId: 67
        items:
          - itemId: 123
            quantity: 2
          - itemId: 321
            quantity: 3
        status: created
    CreateOrderRequest:
      required:
        - items
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/OrderItem'
      example:
        items:
          - itemId: 123
            quantity: 2
          - itemId: 321
            quantity: 3
    Orders:
      type: array
      items:
        $ref: '#/components/schemas/Order'
      example:
        - id: 45
          userId: 67
          items:
            - itemId: 123
              quantity: 2
            - itemId: 321
              quantity: 3
          status: created
        - id: 46
          userId: 67
          items:
            - itemId: 111
              quantity: 1
            - itemId: 222
              quantity: 4
          status: fulfilled
